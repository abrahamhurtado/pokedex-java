/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokidix;

import java.awt.Component;
import java.awt.Color;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;

/**
 *
 * @author TOSHIBA
 */
public class PokeView extends JPanel implements ListCellRenderer<Pokemon> {

    /**
     * Creates new form PokeView
     */
    public PokeView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        artworkLabel = new javax.swing.JLabel();
        type1Label = new javax.swing.JLabel();
        type2Label = new javax.swing.JLabel();

        idLabel.setText("ID");
        idLabel.setToolTipText("");
        idLabel.setName(""); // NOI18N

        nameLabel.setText("Pokemon");

        artworkLabel.setText("artwork");

        type1Label.setText("Tipo 1");

        type2Label.setText("Tipo 2");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(type1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(type2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(artworkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artworkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type1Label, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(type2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel artworkLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel type1Label;
    private javax.swing.JLabel type2Label;
    // End of variables declaration//GEN-END:variables

    public void setPokemon(Pokemon pokemon) {
        idLabel.setText("" + pokemon.getId());
        nameLabel.setText(pokemon.getName());
        artworkLabel.setText("");
        artworkLabel.setIcon(pokemon.getArtwork());
        type1Label.setText(pokemon.getTypes()[0]);
        type1Label.setBackground(setColor(type1Label.getText()));
        type2Label.setText("");
        type2Label.setBackground(setColor(type2Label.getText()));
        if (pokemon.getTypes().length == 2) {
            type2Label.setText(pokemon.getTypes()[1]);
        }
    }

    @Override
    public Component getListCellRendererComponent(JList<? extends Pokemon> jlist, Pokemon e, int i, boolean isSelected, boolean cellHasFocus) {
        setPokemon(e);

        if (isSelected) {
            
            this.setBackground(java.awt.SystemColor.controlHighlight);
        } else {
            this.setBackground(java.awt.SystemColor.control);
        }

        return this;
    }
    
    public Color setColor(String type) {
        Color color;
        switch (type) {
            case "Grass":   color = Color.decode("0x9BCC50");
                            break;
            case "Poison":  color = Color.MAGENTA;
                            break;
            case "Dark":    color = Color.decode("#707070");
                            break;
            case "Bug":     color = Color.decode("#729f3f");
                            break;
            case "Ice":     color = Color.decode("#51c4e7");
                            break;
            case "Psychic": color = Color.decode("#f366b9");
                            break;
            case "Steel":   color = Color.decode("#9eb7b8");
                            break;
            case "Rock":    color = Color.decode("#a38c21");
                            break;
            case "Flying":  color = Color.decode("#3dc7ef");
                            break;
            case "Ghost":   color = Color.decode("#7b62a3");
                            break;
            case "Water":   color = Color.decode("#4592c4");
                            break;
            case "Fire":    color = Color.decode("#fd7d24");
                            break;
            case "Ground":  color = Color.decode("#f7de3f");
                            break;
            case "Normal":  color = Color.decode("#a4acaf");
                            break;
            case "Electric":color = Color.decode("#eed535");
                            break;
            case "Fighting":color = Color.decode("#d56723");
                            break;
            case "Dragon":  color = Color.decode ("#53a4cf");
                            break;
            case "Fairy":   color = Color.decode("#fdb9e9");
                            break;
                
            default:        color = Color.white;
                            break;
        }
//        System.out.println(color.toString());
        return color;
        
    }
    
    
}
