/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pokidix;

import java.awt.Component;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

import javax.swing.AbstractListModel;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;

/**
 *
 * @author TOSHIBA
 */
public class PokeGrid extends PokeView implements ListCellRenderer<Pokemon> {

    AbstractListModel listModel;
    AbstractListModel listModel2;

    /**
     * Creates new form PokeGrid
     *
     * @throws java.io.FileNotFoundException
     */
    public PokeGrid() throws FileNotFoundException {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idLabel = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        especieLabel = new javax.swing.JLabel();
        artworkLabel = new javax.swing.JLabel();
        tiposLabel = new javax.swing.JLabel();
        habilidad3Label = new javax.swing.JLabel();
        type2Label = new javax.swing.JLabel();
        habilidad2Label = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        type1Label = new javax.swing.JLabel();
        habilidad1Label = new javax.swing.JLabel();
        habilidadesLabel = new javax.swing.JLabel();
        statsPanel1 = new pokidix.statsPanel();
        jLabel1 = new javax.swing.JLabel();
        alturaLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pesoLabel = new javax.swing.JLabel();
        evolutionLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        evolutionList = new javax.swing.JList();

        idLabel.setText("ID");

        nameLabel.setText("nombre");

        especieLabel.setText("Especie");

        artworkLabel.setText("artwork");

        tiposLabel.setText("Tipos");

        habilidad3Label.setText("Habilidad3");

        type2Label.setText("Tipo2");

        habilidad2Label.setText("Habilidad2");

        jLabel6.setText("Especie");

        type1Label.setText("Tipo1");

        habilidad1Label.setText("Habilidad1");

        habilidadesLabel.setText("Habilidades");

        jLabel1.setText("Altura");

        alturaLabel.setText("Altura");

        jLabel3.setText("Peso");

        pesoLabel.setText("Peso");

        evolutionLabel.setText("LÃ­nea evolutiva");

        evolutionList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        evolutionList.setPreferredSize(new java.awt.Dimension(40, 90));
        evolutionList.setSelectedIndex(1);
        evolutionList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                evolutionListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(evolutionList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(artworkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(habilidadesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                                .addComponent(tiposLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(type1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(type2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(especieLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habilidad3Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habilidad2Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(habilidad1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(alturaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pesoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(evolutionLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(artworkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tiposLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(type1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(type2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(especieLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(habilidadesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(habilidad1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addComponent(habilidad2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(habilidad3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(alturaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pesoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statsPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(evolutionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void evolutionListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_evolutionListMouseClicked
        // TODO add your handling code here:
        try {
            setPokemon(((Pokemon) evolutionList.getSelectedValue()));
        } catch (NullPointerException ex) {

        }
    }//GEN-LAST:event_evolutionListMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alturaLabel;
    private javax.swing.JLabel artworkLabel;
    private javax.swing.JLabel especieLabel;
    private javax.swing.JLabel evolutionLabel;
    private javax.swing.JList evolutionList;
    private javax.swing.JLabel habilidad1Label;
    private javax.swing.JLabel habilidad2Label;
    private javax.swing.JLabel habilidad3Label;
    private javax.swing.JLabel habilidadesLabel;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel pesoLabel;
    private pokidix.statsPanel statsPanel1;
    private javax.swing.JLabel tiposLabel;
    private javax.swing.JLabel type1Label;
    private javax.swing.JLabel type2Label;
    // End of variables declaration//GEN-END:variables

    public AbstractListModel createModel(Pokemon pokemon, int posicion) throws FileNotFoundException {
        listModel = new javax.swing.AbstractListModel() {
            ArrayList<Pokemon> evoluciones = obtainEvolutions(pokemon, posicion);

            public ArrayList<Pokemon> obtainEvolutions(Pokemon pokemon, int posicion) throws FileNotFoundException {
                ArrayList<Pokemon> data = new JsonToPokemon().crearPokemon();
                ArrayList<Pokemon> evolutions = new ArrayList();

                if (posicion == 0 || posicion == 1 || posicion == 2) {

                    if (posicion == 0) {
                        evolutions.add(data.get(posicion + 1));
                        evolutions.add(data.get(posicion + 2));
                    }

                    if (posicion == 1) {
                        evolutions.add(data.get(posicion - 1));
                        evolutions.add(data.get(posicion + 1));
                    }

                    if (posicion == 2) {
                        evolutions.add(data.get(posicion - 2));
                        evolutions.add(data.get(posicion - 1));
                    }

                } else {
                    if (posicion == 150 || posicion == 149 || posicion == 148) {
                        for (String evolution : pokemon.getEvolutions()) {
                            if (evolution.equals(data.get(posicion - 3).getName())) {
                                evolutions.add(data.get(posicion - 3));
                            }
                            if (evolution.equals(data.get(posicion - 2).getName())) {
                                evolutions.add(data.get(posicion - 2));
                            }
                            if (evolution.equals(data.get(posicion - 1).getName())) {
                                evolutions.add(data.get(posicion - 1));
                            }
                        }
                    } else {
                        for (String evolution : pokemon.getEvolutions()) {
                            if (evolution.equals(data.get(posicion - 3).getName())) {
                                evolutions.add(data.get(posicion - 3));
                            }
                            if (evolution.equals(data.get(posicion - 2).getName())) {
                                evolutions.add(data.get(posicion - 2));
                            }
                            if (evolution.equals(data.get(posicion - 1).getName())) {
                                evolutions.add(data.get(posicion - 1));
                            }
                            if (evolution.equals(data.get(posicion + 1).getName())) {
                                evolutions.add(data.get(posicion + 1));
                            }
                            if (evolution.equals(data.get(posicion + 2).getName())) {
                                evolutions.add(data.get(posicion + 2));
                            }
                            if (evolution.equals(data.get(posicion + 3).getName())) {
                                evolutions.add(data.get(posicion + 3));
                            }
                        }
                    }
                }

                return evolutions;
            }

            @Override
            public int getSize() {
                return evoluciones.size();
            }

            @Override
            public Object getElementAt(int i) {
                return evoluciones.get(i);
            }
        };
        return listModel;
    }

    @Override
    public void setPokemon(Pokemon pokemon) {
        idLabel.setText("" + pokemon.getId());
        nameLabel.setText(pokemon.getName());
        artworkLabel.setText("");
        artworkLabel.setIcon(pokemon.getArtwork());
        type1Label.setText(pokemon.getTypes()[0]);
        type1Label.setBackground(setColor(type1Label.getText()));
        type2Label.setText("");
        if (pokemon.getTypes().length == 2) {
            type2Label.setText(pokemon.getTypes()[1]);
        }
        especieLabel.setText(pokemon.getSpecies());
        alturaLabel.setText(pokemon.getHeight());
        pesoLabel.setText(pokemon.getWeight());
        habilidad1Label.setText(pokemon.getAbilities()[0]);
        if (pokemon.getAbilities().length > 1) {
            habilidad2Label.setText(pokemon.getAbilities()[1]);
            if (pokemon.getAbilities().length == 3) {
                habilidad3Label.setText(pokemon.getAbilities()[2]);
            } else {
                habilidad3Label.setVisible(false);
            }
        } else {
            habilidad2Label.setVisible(false);
            habilidad3Label.setVisible(false);
        }
        statsPanel1.setPokemon(pokemon);
        if (pokemon.getEvolutions().length != 0) {
            try {
                evolutionList.setModel(createModel(pokemon, Integer.parseInt(pokemon.getId()) - 1));
                evolutionList.setCellRenderer(new evolutionPanel());
            } catch (FileNotFoundException ex) {
                Logger.getLogger(PokeGrid.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            evolutionList.setCellRenderer(new NoEvolutionFound());
        }
    }

}
